/* 
 * Ed-Fi Operational Data Store API
 *
 * The Ed-Fi ODS / API enables applications to read and write education data stored in an Ed-Fi ODS through a secure REST interface.  ***  > *Note: Consumers of ODS / API information should sanitize all data for display and storage. The ODS / API provides reasonable safeguards against cross-site scripting attacks and other malicious content, but the platform does not and cannot guarantee that the data it contains is free of all potentially harmful content.*  *** 
 *
 * OpenAPI spec version: 3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = EdFi.OdsApi.Sdk.Client.SwaggerDateConverter;

namespace EdFi.OdsApi.Sdk.Models.Identity
{
    /// <summary>
    /// EdFiStudentDisciplineIncidentAssociation
    /// </summary>
    [DataContract]
    public partial class EdFiStudentDisciplineIncidentAssociation :  IEquatable<EdFiStudentDisciplineIncidentAssociation>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="EdFiStudentDisciplineIncidentAssociation" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected EdFiStudentDisciplineIncidentAssociation() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="EdFiStudentDisciplineIncidentAssociation" /> class.
        /// </summary>
        /// <param name="id">id.</param>
        /// <param name="disciplineIncidentReference">disciplineIncidentReference (required).</param>
        /// <param name="studentReference">studentReference (required).</param>
        /// <param name="behaviors">An unordered collection of studentDisciplineIncidentAssociationBehaviors. Describes behavior by category and provides a detailed description..</param>
        /// <param name="studentParticipationCodeDescriptor">The role or type of participation of a student in a discipline incident;         for example:         Victim         Perpetrator         Witness         Reporter. (required).</param>
        /// <param name="etag">A unique system-generated value that identifies the version of the resource..</param>
        public EdFiStudentDisciplineIncidentAssociation(string id = default(string), EdFiDisciplineIncidentReference disciplineIncidentReference = default(EdFiDisciplineIncidentReference), EdFiStudentReference studentReference = default(EdFiStudentReference), List<EdFiStudentDisciplineIncidentAssociationBehavior> behaviors = default(List<EdFiStudentDisciplineIncidentAssociationBehavior>), string studentParticipationCodeDescriptor = default(string), string etag = default(string))
        {
            // to ensure "disciplineIncidentReference" is required (not null)
            if (disciplineIncidentReference == null)
            {
                throw new InvalidDataException("disciplineIncidentReference is a required property for EdFiStudentDisciplineIncidentAssociation and cannot be null");
            }
            else
            {
                this.DisciplineIncidentReference = disciplineIncidentReference;
            }
            // to ensure "studentReference" is required (not null)
            if (studentReference == null)
            {
                throw new InvalidDataException("studentReference is a required property for EdFiStudentDisciplineIncidentAssociation and cannot be null");
            }
            else
            {
                this.StudentReference = studentReference;
            }
            // to ensure "studentParticipationCodeDescriptor" is required (not null)
            if (studentParticipationCodeDescriptor == null)
            {
                throw new InvalidDataException("studentParticipationCodeDescriptor is a required property for EdFiStudentDisciplineIncidentAssociation and cannot be null");
            }
            else
            {
                this.StudentParticipationCodeDescriptor = studentParticipationCodeDescriptor;
            }
            this.Id = id;
            this.Behaviors = behaviors;
            this.Etag = etag;
        }
        
        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public string Id { get; set; }

        /// <summary>
        /// Gets or Sets DisciplineIncidentReference
        /// </summary>
        [DataMember(Name="disciplineIncidentReference", EmitDefaultValue=false)]
        public EdFiDisciplineIncidentReference DisciplineIncidentReference { get; set; }

        /// <summary>
        /// Gets or Sets StudentReference
        /// </summary>
        [DataMember(Name="studentReference", EmitDefaultValue=false)]
        public EdFiStudentReference StudentReference { get; set; }

        /// <summary>
        /// An unordered collection of studentDisciplineIncidentAssociationBehaviors. Describes behavior by category and provides a detailed description.
        /// </summary>
        /// <value>An unordered collection of studentDisciplineIncidentAssociationBehaviors. Describes behavior by category and provides a detailed description.</value>
        [DataMember(Name="behaviors", EmitDefaultValue=false)]
        public List<EdFiStudentDisciplineIncidentAssociationBehavior> Behaviors { get; set; }

        /// <summary>
        /// The role or type of participation of a student in a discipline incident;         for example:         Victim         Perpetrator         Witness         Reporter.
        /// </summary>
        /// <value>The role or type of participation of a student in a discipline incident;         for example:         Victim         Perpetrator         Witness         Reporter.</value>
        [DataMember(Name="studentParticipationCodeDescriptor", EmitDefaultValue=false)]
        public string StudentParticipationCodeDescriptor { get; set; }

        /// <summary>
        /// A unique system-generated value that identifies the version of the resource.
        /// </summary>
        /// <value>A unique system-generated value that identifies the version of the resource.</value>
        [DataMember(Name="_etag", EmitDefaultValue=false)]
        public string Etag { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class EdFiStudentDisciplineIncidentAssociation {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  DisciplineIncidentReference: ").Append(DisciplineIncidentReference).Append("\n");
            sb.Append("  StudentReference: ").Append(StudentReference).Append("\n");
            sb.Append("  Behaviors: ").Append(Behaviors).Append("\n");
            sb.Append("  StudentParticipationCodeDescriptor: ").Append(StudentParticipationCodeDescriptor).Append("\n");
            sb.Append("  Etag: ").Append(Etag).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as EdFiStudentDisciplineIncidentAssociation);
        }

        /// <summary>
        /// Returns true if EdFiStudentDisciplineIncidentAssociation instances are equal
        /// </summary>
        /// <param name="input">Instance of EdFiStudentDisciplineIncidentAssociation to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(EdFiStudentDisciplineIncidentAssociation input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.DisciplineIncidentReference == input.DisciplineIncidentReference ||
                    (this.DisciplineIncidentReference != null &&
                    this.DisciplineIncidentReference.Equals(input.DisciplineIncidentReference))
                ) && 
                (
                    this.StudentReference == input.StudentReference ||
                    (this.StudentReference != null &&
                    this.StudentReference.Equals(input.StudentReference))
                ) && 
                (
                    this.Behaviors == input.Behaviors ||
                    this.Behaviors != null &&
                    this.Behaviors.SequenceEqual(input.Behaviors)
                ) && 
                (
                    this.StudentParticipationCodeDescriptor == input.StudentParticipationCodeDescriptor ||
                    (this.StudentParticipationCodeDescriptor != null &&
                    this.StudentParticipationCodeDescriptor.Equals(input.StudentParticipationCodeDescriptor))
                ) && 
                (
                    this.Etag == input.Etag ||
                    (this.Etag != null &&
                    this.Etag.Equals(input.Etag))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.DisciplineIncidentReference != null)
                    hashCode = hashCode * 59 + this.DisciplineIncidentReference.GetHashCode();
                if (this.StudentReference != null)
                    hashCode = hashCode * 59 + this.StudentReference.GetHashCode();
                if (this.Behaviors != null)
                    hashCode = hashCode * 59 + this.Behaviors.GetHashCode();
                if (this.StudentParticipationCodeDescriptor != null)
                    hashCode = hashCode * 59 + this.StudentParticipationCodeDescriptor.GetHashCode();
                if (this.Etag != null)
                    hashCode = hashCode * 59 + this.Etag.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // StudentParticipationCodeDescriptor (string) maxLength
            if(this.StudentParticipationCodeDescriptor != null && this.StudentParticipationCodeDescriptor.Length > 306)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for StudentParticipationCodeDescriptor, length must be less than 306.", new [] { "StudentParticipationCodeDescriptor" });
            }

            yield break;
        }
    }

}
